;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; *****************************************************************************
; PlatformIO specific configurations
; *****************************************************************************
[platformio]
; Define default environments, which shall be automatically be built.
default_envs = LineFollowerTarget
;default_envs = LineFollowerSim

; *****************************************************************************
; Common configurations, which is independed of the environment.
; *****************************************************************************
[common]
build_flags =
    -DTEAM_NAME_LINE_1="\"Radon\""
    -DTEAM_NAME_LINE_2="\"Alcer\""

; *****************************************************************************
; Target environment for Zumo32U4.
; *****************************************************************************
[target:Zumo32U4]
platform = atmelavr
board = a-star32U4
framework = arduino
build_flags =
    ${common.build_flags}
    -Wno-switch
lib_deps =
    pololu/Zumo32U4 @ ^2.0.1
    HALInterfaces
    HALTarget
lib_ignore =
    ArduinoNative
    HALTest
    HALSim
extra_scripts =

; The monitor port shows the debug output and the test output.
; If you connect the robot to your pc, this is the port you will see.
monitor_port = com6

; The upload port is spawned by the bootmonitor and used to update the program on the target.
; If you connect the robot to your pc, press twice reset button to jump to the bootloader,
; this is the port you will see.
upload_port = com5

; The test port is spawned by the bootmonitor and used to update the test on the target.
; If you connect the robot to your pc, press twice reset button to jump to the bootloader,
; this is the port you will see.
test_port = com9

; *****************************************************************************
; PC target environment for Webots simulation.
;
; It is assumed that the environment variable WEBOTS_HOME is set to the
; Webots directory, e.g. WEBOTS_HOME=C:\Users\<user>\AppData\Local\Programs\Webots
; *****************************************************************************
[target:Sim]
platform = native
build_flags =
    -std=c++11
    -DTARGET_NATIVE
    -I./lib/Webots/include/c
    -I./lib/Webots/include/cpp
    -L./lib/Webots/lib/controller
    -llibController
lib_deps =
    ArduinoNative
    HALInterfaces
    HALSim
    Webots
lib_ignore =
    HALTarget
    HALTest
extra_scripts =
    pre:./scripts/create_webots_library.py
    post:./scripts/copy_webots_shared_libs.py
    post:./scripts/copy_track_file.py

; *****************************************************************************
; PC target environment for tests
; *****************************************************************************
[target:Test]
platform = native
build_flags =
    -std=c++11
    -DTARGET_NATIVE
    -DUNIT_TEST
lib_deps =
    ArduinoNative
    HALInterfaces
    HALTest
lib_ignore =
    HALSim
    HALTarget
    Webots
extra_scripts =

; *****************************************************************************
; Line follower application
; *****************************************************************************
[app:LineFollower]
build_flags =
    ${common.build_flags}
    -DLOG_DEBUG_ENABLE
lib_deps =
    LineFollower
    Service
lib_ignore =
    RemoteControl

; *****************************************************************************
; Remote control application
; *****************************************************************************
[app:RemoteControl]
build_flags =
    ${common.build_flags}
    -DLOG_DEBUG_ENABLE
lib_deps =
    RemoteControl
    Service
lib_ignore =
    LineFollower

; *****************************************************************************
; Line follower application on target
; *****************************************************************************
[env:LineFollowerTarget]
extends = target:Zumo32U4, app:LineFollower
build_flags =
    ${target:Zumo32U4.build_flags}
    ${app:LineFollower.build_flags}
lib_deps =
    ${target:Zumo32U4.lib_deps}
    ${app:LineFollower.lib_deps}
lib_ignore =
    ${target:Zumo32U4.lib_ignore}
    ${app:LineFollower.lib_ignore}
extra_scripts =
    ${target:Zumo32U4.extra_scripts}
check_tool = cppcheck
check_flags =
    cppcheck: --suppress=noExplicitConstructor --suppress=unusedFunction --suppress=*:*/libdeps/*
check_skip_packages = yes

; *****************************************************************************
; Line follower application on simulation
; *****************************************************************************
[env:LineFollowerSim]
extends = target:Sim, app:LineFollower
build_flags =
    ${target:Sim.build_flags}
    ${app:LineFollower.build_flags}
lib_deps =
    ${target:Sim.lib_deps}
    ${app:LineFollower.lib_deps}
lib_ignore =
    ${target:Sim.lib_ignore}
    ${app:LineFollower.lib_ignore}
extra_scripts =
    ${target:Sim.extra_scripts}
check_tool = cppcheck
check_flags =
    cppcheck: --suppress=noExplicitConstructor --suppress=unusedFunction
check_skip_packages = yes

; *****************************************************************************
; Remote control application on target
; *****************************************************************************
[env:RemoteControlTarget]
extends = target:Zumo32U4, app:RemoteControl
build_flags =
    ${target:Zumo32U4.build_flags}
    ${app:RemoteControl.build_flags}
lib_deps =
    ${target:Zumo32U4.lib_deps}
    ${app:RemoteControl.lib_deps}
lib_ignore =
    ${target:Zumo32U4.lib_ignore}
    ${app:RemoteControl.lib_ignore}
extra_scripts =
    ${target:Zumo32U4.extra_scripts}
check_tool = cppcheck
check_flags =
    cppcheck: --suppress=noExplicitConstructor --suppress=unusedFunction --suppress=*:*/libdeps/*
check_skip_packages = yes

; *****************************************************************************
; Remote control application on simulation
; *****************************************************************************
[env:RemoteControlSim]
extends = target:Sim, app:RemoteControl
build_flags =
    ${target:Sim.build_flags}
    ${app:RemoteControl.build_flags}
lib_deps =
    ${target:Sim.lib_deps}
    ${app:RemoteControl.lib_deps}
lib_ignore =
    ${target:Sim.lib_ignore}
    ${app:RemoteControl.lib_ignore}
extra_scripts =
    ${target:Sim.extra_scripts}
check_tool = cppcheck
check_flags =
    cppcheck: --suppress=noExplicitConstructor --suppress=unusedFunction
check_skip_packages = yes

; *****************************************************************************
; PC target environment for tests
; *****************************************************************************
[env:Test]
extends = target:Test
build_flags =
    ${target:Test.build_flags}
    ${common.build_flags}
lib_deps =
    ${target:Test.lib_deps}
lib_ignore =
    ${target:Test.lib_ignore}
extra_scripts =
    ${target:Test.extra_scripts}
check_tool = cppcheck
check_flags =
    cppcheck: --suppress=noExplicitConstructor --suppress=unusedFunction
check_skip_packages = yes
